@import "variables";
@import "mixins";

*,
*:after,
*:before {
  margin: 0;
  padding: 0;
  @include border-box;
}

img {
  width: auto;
  max-width: 100%;
  height: auto !important;
}

.wrapper, .row {
  @extend %clearfix;
}

.wrapper {
  width: 95%;
  max-width: $grid-max-width;
}

[class*='col-'] {
    float: left;
    padding: 1em;
    width: 100%;
    min-height: 1px;
    }

[class*='-swab-'] {
  @extend %basic-div;
}

[class*="mix-"]{
    @extend %basic-div;
}

@for $i from 1 through length($colors) {
  .color-swab-#{$i} {
    @include main-color(nth($colors, $i));
  }
  .tint-swab-#{$i} {
    .swab-section {
      @extend %tint-swab-height;
      &.light {
        @include lighten(nth($colors, $i));
      }
      &.normal {
        background: (nth($colors, $i));
      }
      &.dark {
        @include darken(nth($colors, $i));
        }
      }
    }
    .color-mix-1 {
      .mix-#{$i} {
        @include mix-color($color1, (nth($colors, $i)));
      }
    }
    .color-mix-2 {
      .mix-#{$i} {
        @include mix-color($color2, (nth($colors, $i)));
      }
    }
    .color-mix-3 {
      .mix-#{$i} {
        @include mix-color($color3, (nth($colors, $i)));
      }
    }
    .color-mix-4 {
      .mix-#{$i} {
        @include mix-color($color4, (nth($colors, $i)));
      }
    }


}


// @for $i from 1 through length($colors) {
//   .color-mix-1 {
//     .mix-#{$i} {
//       @include mix-color($color1, (nth($colors, $i)));
//     }
//   }
// }

// Responsive grid media query
  @media #{$breakpoint-medium} {
    @for $i from 1 through $grid-columns {
      .col-#{$i} {
        width: 100% / $grid-columns * $i;
        }
      }

    }
